/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.emp.gl.time.control;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import org.emp.gl.core.lookup.Lookup;
import org.emp.gl.time.action.TimeActionInterface;
import org.emp.gl.timer.service.TimerService;

/**
 *
 * @author ahmed
 */
public class GuiControl extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form GuiControl
     */
    public GuiControl() {
        initComponents();
        this.setbutton.addActionListener(this);
        this.modebutton.addActionListener(this);
        this.incbutton.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setbutton = new javax.swing.JButton();
        modebutton = new javax.swing.JButton();
        incbutton = new javax.swing.JButton();
        comment = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Setting Smart Watch");

        setbutton.setFont(new java.awt.Font("Algerian", 0, 25)); // NOI18N
        setbutton.setText("Setting");

        modebutton.setFont(new java.awt.Font("Algerian", 0, 25)); // NOI18N
        modebutton.setText("MODe");
        modebutton.setEnabled(false);

        incbutton.setFont(new java.awt.Font("Algerian", 0, 25)); // NOI18N
        incbutton.setText("Inc+");
        incbutton.setEnabled(false);
        incbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incbuttonActionPerformed(evt);
            }
        });

        comment.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        comment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(setbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(modebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(incbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(incbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(comment, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void incbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incbuttonActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_incbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiControl().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel comment;
    private javax.swing.JButton incbutton;
    private javax.swing.JButton modebutton;
    private javax.swing.JButton setbutton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==this.setbutton)
        {
            if (this.setbutton.getText().equals("Setting")) {
                this.setbutton.setText("END Setting");
                this.incbutton.setEnabled(true);
                this.modebutton.setEnabled(true);
                this.comment.setText("YOU ARE ABOUT TO SET SECONDES");
            }
            else
            {
                this.setbutton.setText("Setting");
                this.incbutton.setEnabled(false);
                this.modebutton.setEnabled(false);
                this.comment.setText("");
            }
            Lookup.getInstance().getService(TimeActionInterface.class).doConfig();
            return;
        }
        if(e.getSource()==this.modebutton)
        {
            Lookup.getInstance().getService(TimeActionInterface.class).doMode();
            this.incbutton.setEnabled(true);
            this.modebutton.setEnabled(true);
            if (this.comment.getText().equals("YOU ARE ABOUT TO SET SECONDES")) {
                this.comment.setText("YOU ARE ABOUT TO SET MINUTES");
                 return;
            }
            if (this.comment.getText().equals("YOU ARE ABOUT TO SET MINUTES")) {
                this.comment.setText("YOU ARE ABOUT TO SET HOURS");
                 return;
            }
            if (this.comment.getText().equals("YOU ARE ABOUT TO SET HOURS")) {
                this.comment.setText("YOU ARE ABOUT TO SET SECONDES");
                return;
            }
            
           
        }
        if(e.getSource()==this.incbutton)
        {
            Lookup.getInstance().getService(TimeActionInterface.class).doIncrement();
            this.incbutton.setEnabled(true);
            this.modebutton.setEnabled(true);
           
            return;
        }
        
    }
}
